// Generated by OpenAI to make my life easier
"use strict";
const ragfair = "ragfair";
const db = DatabaseServer.tables;
const item = db.templates.items;
const d_trader = db.traders;
const d_locales = db.locales.global;
const EFHMOD = require('../../efh-mod');
const logger = require(EFHMOD.logger).logger;

class PDA
{
    static onLoadMod()
    {
        PDA.createItem();
        PDA.addToTraders();
    }

    static createItem()
    {
        logger.logDebug(`[PDA] Creating new item via cloning`);
        let pda = JsonUtil.clone(item["56742c324bdc2d150f8b456d"]);
        pda._id = "efh_barter_pda";
        pda._props.Weight = 0.544311; // 1.2 lb converted to KG
        pda._props.Width = 1
        pda._props.Height = 2
        pda._props.Prefab.path = "assets/content/items/barter/pda/efh_barter_pda.bundle";
        item["efh_barter_pda"] = pda;

        for (const localeID in d_locales)
        {
            d_locales[localeID].templates["efh_barter_pda"] = {
                "Name": "Ukranian PDA Network PDA",
                "ShortName": "UAPDAN PDA",
                "Description": "This compact Ukrainian PDA features a UAPDAN logo on the casing, with a joystick and buttons for easy navigation. Designed for convenience and portability, this PDA is perfect for managing schedules and staying connected while in hard to contact places."
            };
        }
        logger.logDebug(`[PDA] Adding templates to DB`);

        db.templates.handbook.Items.push(
        {
            "Id": "efh_barter_pda",
            "ParentId": "5b47574386f77428ca22b2ef",
            "Price": 33000
        });
        logger.logDebug(`[PDA] Added item to handbook`);
    }

    static addToTraders()
    {
        logger.logDebug(`[PDA] Adding item to ${ragfair}`);
        const assort_items = {
            "_id": "efh_barter_pda",
            "_tpl": "efh_barter_pda",
            "parentId": "hideout",
            "slotId": "hideout",
            "upd": {
                "UnlimitedCount": true,
                "StackObjectsCount": 999999999
            }
        };

        const barter_scheme = [
            [
                {
                    "count": 1,
                    "_tpl": "5449016a4bdc2d6f028b456f"
                }
            ]
        ];

        d_trader[ragfair].assort.items.push(assort_items);
        d_trader[ragfair].assort.barter_scheme["efh_barter_pda"] = barter_scheme;
        d_trader[ragfair].assort.loyal_level_items["efh_barter_pda"] = 1;
        logger.logDebug(`[PDA] Added item to ${ragfair} traders`);
    }
}

module.exports = PDA;